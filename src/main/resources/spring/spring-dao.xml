<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd">
	<!-- Configuration of mybatis -->
	<!-- 1. database properties：${url} -->
	<context:property-placeholder ignore-unresolvable="true" file-encoding="UTF-8" location="classpath:jdbc.properties" />

	<!-- 2. database connection pool-->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<!-- Configure connection pool properties -->
		<property name="driverClass" value="${jdbc.driver}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />

		<!-- c3p0 connection pool private properties -->
		<property name="maxPoolSize" value="30" />
		<property name="minPoolSize" value="10" />
		<!-- Not commit automatically after closing the connection -->
		<property name="autoCommitOnClose" value="false" />
		<!-- Timeout when get connection -->
		<property name="checkoutTimeout" value="10000" />
		<!-- The number of retries when the connection fails -->
		<property name="acquireRetryAttempts" value="2" />
	</bean>

	<!-- 3. Configure SqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- Inject the database connection pool -->
		<property name="dataSource" ref="dataSource" />
		<!-- Global configuration file:mybatis-config.xml -->
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<!-- Scan entity package  -->
		<property name="typeAliasesPackage" value="com.example.entity" />
		<!-- Scan sql configuration file:mapper needed xml file -->
		<property name="mapperLocations" value="classpath:mapper/*.xml" />
	</bean>

	<!-- 4. Scan Dao package，dynamically implement the Dao interface and inject it into the spring container -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- inject sqlSessionFactory -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
		<!-- Give Dao interface package that needs to be scanned -->
		<property name="basePackage" value="com.example.dao" />
	</bean>
</beans>