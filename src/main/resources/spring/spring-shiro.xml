<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- Configure SecurityManager -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="authenticator" ref="authenticator"></property>
        
        <property name="realms">
        	<list>
    			<ref bean="accountRealm"/>
    		</list>
        </property>
        
        <property name="rememberMeManager.cookie.maxAge" value="10"></property>
    </bean>
    
    <bean id="authenticator" 
    	class="org.apache.shiro.authc.pam.ModularRealmAuthenticator">
    	<property name="authenticationStrategy">
    		<bean class="org.apache.shiro.authc.pam.AtLeastOneSuccessfulStrategy"></bean>
    	</property>
    </bean>
    
    <!-- Configure Realm -->
    <bean id="accountRealm" class="com.example.config.realm.AccountRealm">
    	<property name="credentialsMatcher">
    		<bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
    			<!-- The name of Algorithm -->
    			<property name="hashAlgorithmName" value="MD5"></property>
    			<!-- Configure encryption times -->
    			<property name="hashIterations" value="1024"></property>
    		</bean>
    	</property>
    </bean>
    
    <!-- Configure LifecycleBeanPostProcessor.
         which can call "the method of life cycle" of <shiro bean> automatically
         in Spring IOC container  -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
    
    <!-- Enable the use of shiro annotations in the IOC container.
         But it can only be used after LifecycleBeanPostProcessor is configured -->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor"/>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>
    
    <!-- Configure ShiroFilter -->
    <!-- id must be identical with <filter-name> in web.xml, DelegatingFilterProxy configuration.
         If it is not: NoSuchBeanDefinitionException.  -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="/admin/login"/>
        <property name="successUrl" value="/admin/index"/>
        <property name="unauthorizedUrl" value="/admin/error"/>
        <property name="filterChainDefinitionMap" ref="filterChainDefinitionMap"></property>
    </bean>
    
    <!-- Configure a bean, which is a Map.  through factory -->
    <bean id="filterChainDefinitionMap" 
    	  factory-bean="filterChainDefinitionMapBuilder" factory-method="buildFilterChainDefinitionMap">
    </bean>

    <bean id="filterChainDefinitionMapBuilder"
    	  class="com.example.config.ShiroConfig">
    </bean>
</beans>